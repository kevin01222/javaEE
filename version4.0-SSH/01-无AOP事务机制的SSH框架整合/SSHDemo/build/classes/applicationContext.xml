<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">
	<!-- 1-实现IOC容器自动扫描组件@Component的功能,使得我们可以使用注解进行开发 -->
	<context:component-scan base-package="com.neu"></context:component-scan>
	<!-- 2-配置C3P0数据源对象 dataSource -->
	<!-- 2.1 说明properties文件的读取路径 -->
	<context:property-placeholder location="classpath:db.properties"/>
	<!-- 2.2 根据文件读取路径配置数据源对象 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${connection.driver_class}"></property>
		<property name="jdbcUrl" value="${connection.url}"></property>
		<property name="user" value="${connection.username}"></property>
		<property name="password" value="${connection.password}"></property>
		<property name="minPoolSize" value="${c3p0.min_size}"></property>
		<property name="maxPoolSize" value="${c3p0.max_size}"></property>
		<property name="acquireIncrement" value="${c3p0.acquire_increment}"></property>
		<property name="idleConnectionTestPeriod" value="${c3p0.idle_test_period}"></property>
		<property name="checkoutTimeout" value="${c3p0.timeout}"></property>
		<property name="maxStatements" value="${c3p0.max_statements}"></property>
	</bean>
	<!-- 3-配置SessionFactory的实例化对象 sessionFactory -->
	<bean id="sessionFactory" class=
	"org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<!-- 3.1 依赖注入dataSource数据源对象 -->
		<property name="dataSource" ref="dataSource"></property>
		<!-- 3.2 读入hibernate.cfg.xml配置信息 -->
		<property name="configLocation" value="classpath:hibernate.cfg.xml"></property>
		<!-- 3.3 读入指定目录下的所有*.hbm.xml配置信息,ORM对象映射关系信息 -->
		<property name="mappingLocations" value="classpath:com/neu/dao/pojo/*.hbm.xml"></property>
	</bean>
	<!-- 4-根据Spring框架的AOP特性,实现基于service层的事务处理机制 实现的结果:当执行service层的方法时,执行前启动事务,执行后提交或回滚事务,这一切都是自动完成的 
		有两种方式:重点讲解 注解方式(应用) XML事务全配置方式(了解) -->

</beans>
